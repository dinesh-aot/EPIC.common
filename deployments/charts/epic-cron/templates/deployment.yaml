apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    app-group: epic-app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        app-group: epic-app
        environment: {{ .Values.env }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: image-registry.openshift-image-registry.svc:5000/{{ .Values.imageNamespace }}/{{ .Values.name }}:{{ .Values.imageTag }}
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: cron-config
              readOnly: true
              mountPath: /epic-cron/cron/
          env:
            - name: TRACK_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: track-patroni
                  key: app-db-username
            - name: TRACK_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: track-patroni
                  key: app-db-password
            - name: TRACK_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: track-patroni
                  key: app-db-username
            - name: TRACK_DATABASE_HOST
              value: "{{ .Values.TRACK.database.host }}"
            - name: TRACK_DATABASE_PORT
              value: "{{ .Values.TRACK.database.port }}"

            - name: SUBMIT_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: submit-patroni
                  key: app-db-name
            - name: SUBMIT_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: submit-patroni
                  key: app-db-password
            - name: SUBMIT_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: submit-patroni
                  key: app-db-name
            - name: SUBMIT_DATABASE_HOST
              value: "{{ .Values.SUBMIT.database.host }}"
            - name: SUBMIT_DATABASE_PORT
              value: "{{ .Values.SUBMIT.database.port }}"

            - name: COMPLIANCE_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: compliance-patroni
                  key: app-db-username
            - name: COMPLIANCE_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compliance-patroni
                  key: app-db-password
            - name: COMPLIANCE_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: compliance-patroni
                  key: app-db-name
            - name: COMPLIANCE_DATABASE_HOST
              value: "{{ .Values.COMPLIANCE.database.host }}"
            - name: COMPLIANCE_DATABASE_PORT
              value: "{{ .Values.COMPLIANCE.database.port }}"

          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: Always
      volumes:
        - name: cron-config
          configMap:
            name: {{ .Values.name }}-config
            defaultMode: 420
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
